/*
Applause button theming

Fetched from GitHub
https://github.com/ColinEberhardt/applause-button/blob/master/src/applause-button.scss
on 16 May 2019, cleaned to match our sass-lint rules.

Custom Changes for wustep.me:
- Changed text to appear on bottom instead of top
- Changed cursor to be default once clapped
- Added 1em marign right and botom
*/

@mixin animate-once($name) {
  animation-name: $name;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}

@mixin centered-square($size) {
  position: absolute;
  width: $size;
  height: $size;
  margin-left: (100% - $size) / 2;
  margin-top: (100% - $size) / 2;
}

@mixin position-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

applause-button {
  position: relative;
  cursor: pointer;
  margin: 0 1em 1em 0;

  .style-root {
    @include position-fill;

    &::after {
      @include position-fill;
      content: " ";
      display: block;
      border-radius: 50%;
      border: 1px solid;
    }

    &:hover::after:not(.clap-limit-exceeded) {
      border-color: inherit;
    }
  }

  &.loading {
    opacity: 0.5;
  }

  .shockwave {
    @include position-fill;
    border-radius: 50%;
  }

  svg {
    @include centered-square(60%);
    @include position-fill;
    opacity: 0.8;
    stroke: none;
    overflow: visible; /* removed !important, not needed */

    g {
      &.flat {
        visibility: hidden;
      }

      &.outline {
        visibility: visible;
      }
    }
  }

  &.clapped {
    &:hover {
      cursor: default;
    }

    svg {
      g {
        &.flat {
          visibility: visible;
        }

        &.outline {
          visibility: hidden;
        }
      }
    }
  }

  .count-container {
    position: absolute;
    top: 105%; /* from -40% */
    width: 100%;
    user-select: none;

    .count {
      margin-left: 50%;
      transform: translateX(-50%);
      width: 1000px;
      text-align: center;
    }
  }

  g {
    &.sparkle {
      circle {
        opacity: 0;
        stroke-width: 0;
      }

      $elements: 5;
      $degrees: 360deg / $elements;
      @for $i from 0 to $elements {
        g:nth-child(#{$i + 1}) {
          transform: rotate($degrees * $i) translateX(10px);
        }
      }
    }
  }

  &:hover:not(.clapped) {
    .shockwave {
      animation-name: shockwave;
      animation-duration: 1s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in;
    }
  }

  // CSS that is toggled to fire one-time animations
  &.clap {
    .sparkle {
      circle {
        @include animate-once(explode);
      }
    }

    @include animate-once(pulse);

    .count {
      @include animate-once(hideThenShow);
    }
  }
}

@keyframes explode {
  0% {
    transform: translateX(10px);
    opacity: 0;
  }

  20% {
    opacity: 1;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateX(25px);
  }
}

@keyframes shockwave {
  0% {
    transform: scale(1);
    box-shadow: 0 0 2px;
    opacity: 1;
  }

  100% {
    transform: scale(1);
    opacity: 0;
    box-shadow: 0 0 50px, inset 0 0 10px;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes hideThenShow {
  0% {
    opacity: 1;
    transform: translateY(0);
  }

  20% {
    opacity: 0;
    transform: translateY(-10px);
  }

  50% {
    transform: translateY(10px);
  }

  80% {
    transform: translateY(10px);
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
